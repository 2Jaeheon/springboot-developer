package org.jaeheon.springbootdeveloper;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;

@NoArgsConstructor(access = AccessLevel.PROTECTED)
@AllArgsConstructor
@Getter
// @Entity is used to specify that the class is an entity and is mapped to a database table
// if you need to map the entity to a table with a different name, you can use the name attribute of the @Entity annotation
// @Entity(name = "table_name")
@Entity
public class Member {


    // @Id is used to specify the primary key of an entity
    @Id
    // @GeneratedValue is used to specify the generation strategies for the values of primary keys
    // strategy: the generation strategy that the persistence provider must use to generate the primary key
    // GenerationType.IDENTITY: the primary key is generated by the database
    // GenerationType.SEQUENCE: the primary key is generated by a database sequence
    // GenerationType.TABLE: the primary key is generated by a table in the database
    // GenerationType.AUTO: the persistence provider chooses the generation strategy
    @GeneratedValue(strategy = GenerationType.IDENTITY)

    // @Column is used to specify the details of the column to which a field or property will be mapped
    // this annotation map the field to a column in the database table
    // name: the name of the column
    // updatable: whether the column is included in SQL UPDATE statements generated by the persistence provider
    // nullable: whether the column is nullable
    // unique: whether the column is a unique key
    // columnDefinition: the SQL fragment that is used when generating the DDL for the column
    @Column(name = "id", updatable = false)
    private Long id;

    @Column(name = "name", nullable = false)
    private String name;

    public void changeName(String name) {
        this.name = name;
    }
}
